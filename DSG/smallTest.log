<object-stream>
<org.drools.core.audit.event.ActivationLogEvent>
  <type>4</type>
  <activationId>Explode Package [1]</activationId>
  <rule>Explode Package</rule>
  <declarations>$p=[Kobe3, Kobe3](1)</declarations>
</org.drools.core.audit.event.ActivationLogEvent>
<org.drools.core.audit.event.ActivationLogEvent>
  <type>4</type>
  <activationId>for splitable packages [1]</activationId>
  <rule>for splitable packages</rule>
  <declarations>$p=[Kobe3, Kobe3](1)</declarations>
</org.drools.core.audit.event.ActivationLogEvent>
<org.drools.core.audit.event.ActivationLogEvent>
  <type>4</type>
  <activationId>add splits [1]</activationId>
  <rule>add splits</rule>
  <declarations>$p=[Kobe3, Kobe3](1)</declarations>
</org.drools.core.audit.event.ActivationLogEvent>
<org.drools.core.audit.event.ObjectLogEvent>
  <type>1</type>
  <factId>1</factId>
  <objectToString>[Kobe3, Kobe3]</objectToString>
</org.drools.core.audit.event.ObjectLogEvent>
<org.drools.core.audit.event.ActivationLogEvent>
  <type>4</type>
  <activationId>Explode Package [2]</activationId>
  <rule>Explode Package</rule>
  <declarations>$p=[Kayak1, Kayak1](2)</declarations>
</org.drools.core.audit.event.ActivationLogEvent>
<org.drools.core.audit.event.ActivationLogEvent>
  <type>4</type>
  <activationId>for splitable packages [2]</activationId>
  <rule>for splitable packages</rule>
  <declarations>$p=[Kayak1, Kayak1](2)</declarations>
</org.drools.core.audit.event.ActivationLogEvent>
<org.drools.core.audit.event.ActivationLogEvent>
  <type>4</type>
  <activationId>add splits [2]</activationId>
  <rule>add splits</rule>
  <declarations>$p=[Kayak1, Kayak1](2)</declarations>
</org.drools.core.audit.event.ActivationLogEvent>
<org.drools.core.audit.event.ObjectLogEvent>
  <type>1</type>
  <factId>2</factId>
  <objectToString>[Kayak1, Kayak1]</objectToString>
</org.drools.core.audit.event.ObjectLogEvent>
<org.drools.core.audit.event.ActivationLogEvent>
  <type>4</type>
  <activationId>Explode Package [3]</activationId>
  <rule>Explode Package</rule>
  <declarations>$p=[AJ13](3)</declarations>
</org.drools.core.audit.event.ActivationLogEvent>
<org.drools.core.audit.event.ActivationLogEvent>
  <type>4</type>
  <activationId>for splitable packages [3]</activationId>
  <rule>for splitable packages</rule>
  <declarations>$p=[AJ13](3)</declarations>
</org.drools.core.audit.event.ActivationLogEvent>
<org.drools.core.audit.event.ActivationLogEvent>
  <type>4</type>
  <activationId>add splits [3]</activationId>
  <rule>add splits</rule>
  <declarations>$p=[AJ13](3)</declarations>
</org.drools.core.audit.event.ActivationLogEvent>
<org.drools.core.audit.event.ObjectLogEvent>
  <type>1</type>
  <factId>3</factId>
  <objectToString>[AJ13]</objectToString>
</org.drools.core.audit.event.ObjectLogEvent>
<org.drools.core.audit.event.ActivationLogEvent>
  <type>4</type>
  <activationId>Explode Package [4]</activationId>
  <rule>Explode Package</rule>
  <declarations>$p=[AJ13](4)</declarations>
</org.drools.core.audit.event.ActivationLogEvent>
<org.drools.core.audit.event.ActivationLogEvent>
  <type>4</type>
  <activationId>for splitable packages [4]</activationId>
  <rule>for splitable packages</rule>
  <declarations>$p=[AJ13](4)</declarations>
</org.drools.core.audit.event.ActivationLogEvent>
<org.drools.core.audit.event.ActivationLogEvent>
  <type>4</type>
  <activationId>add splits [4]</activationId>
  <rule>add splits</rule>
  <declarations>$p=[AJ13](4)</declarations>
</org.drools.core.audit.event.ActivationLogEvent>
<org.drools.core.audit.event.ObjectLogEvent>
  <type>1</type>
  <factId>4</factId>
  <objectToString>[AJ13]</objectToString>
</org.drools.core.audit.event.ObjectLogEvent>
<org.drools.core.audit.event.ObjectLogEvent>
  <type>1</type>
  <factId>5</factId>
  <objectToString>store: 3</objectToString>
</org.drools.core.audit.event.ObjectLogEvent>
<org.drools.core.audit.event.ObjectLogEvent>
  <type>1</type>
  <factId>6</factId>
  <objectToString>Store: 1</objectToString>
</org.drools.core.audit.event.ObjectLogEvent>
<org.drools.core.audit.event.ActivationLogEvent>
  <type>6</type>
  <activationId>Explode Package [4]</activationId>
  <rule>Explode Package</rule>
  <declarations>$p=[AJ13](4)</declarations>
</org.drools.core.audit.event.ActivationLogEvent>
<org.drools.core.audit.event.ActivationLogEvent>
  <type>7</type>
  <activationId>Explode Package [4]</activationId>
  <rule>Explode Package</rule>
  <declarations>$p=[AJ13](4)</declarations>
</org.drools.core.audit.event.ActivationLogEvent>
<org.drools.core.audit.event.ActivationLogEvent>
  <type>6</type>
  <activationId>for splitable packages [4]</activationId>
  <rule>for splitable packages</rule>
  <declarations>$p=[AJ13](4)</declarations>
</org.drools.core.audit.event.ActivationLogEvent>
<org.drools.core.audit.event.ActivationLogEvent>
  <type>4</type>
  <activationId>generate test results [7, 4, 8]</activationId>
  <rule>generate test results</rule>
  <declarations>$stores=[store: 3, Store: 1](8); $test=Package test: [[Parcel: [AJ13 (1) ]]](7); $pack=[AJ13](4)</declarations>
</org.drools.core.audit.event.ActivationLogEvent>
<org.drools.core.audit.event.ObjectLogEvent>
  <type>1</type>
  <factId>7</factId>
  <objectToString>Package test: [[Parcel: [AJ13 (1) ]]]</objectToString>
</org.drools.core.audit.event.ObjectLogEvent>
<org.drools.core.audit.event.ActivationLogEvent>
  <type>7</type>
  <activationId>for splitable packages [4]</activationId>
  <rule>for splitable packages</rule>
  <declarations>$p=[AJ13](4)</declarations>
</org.drools.core.audit.event.ActivationLogEvent>
<org.drools.core.audit.event.ActivationLogEvent>
  <type>6</type>
  <activationId>for splitable packages [3]</activationId>
  <rule>for splitable packages</rule>
  <declarations>$p=[AJ13](3)</declarations>
</org.drools.core.audit.event.ActivationLogEvent>
<org.drools.core.audit.event.ActivationLogEvent>
  <type>4</type>
  <activationId>generate test results [9, 3, 10]</activationId>
  <rule>generate test results</rule>
  <declarations>$stores=[store: 3, Store: 1](10); $test=Package test: [[Parcel: [AJ13 (1) ]]](9); $pack=[AJ13](3)</declarations>
</org.drools.core.audit.event.ActivationLogEvent>
<org.drools.core.audit.event.ObjectLogEvent>
  <type>1</type>
  <factId>9</factId>
  <objectToString>Package test: [[Parcel: [AJ13 (1) ]]]</objectToString>
</org.drools.core.audit.event.ObjectLogEvent>
<org.drools.core.audit.event.ActivationLogEvent>
  <type>7</type>
  <activationId>for splitable packages [3]</activationId>
  <rule>for splitable packages</rule>
  <declarations>$p=[AJ13](3)</declarations>
</org.drools.core.audit.event.ActivationLogEvent>
<org.drools.core.audit.event.ActivationLogEvent>
  <type>6</type>
  <activationId>for splitable packages [2]</activationId>
  <rule>for splitable packages</rule>
  <declarations>$p=[Kayak1, Kayak1](2)</declarations>
</org.drools.core.audit.event.ActivationLogEvent>
<org.drools.core.audit.event.ActivationLogEvent>
  <type>4</type>
  <activationId>generate test results [11, 2, 12]</activationId>
  <rule>generate test results</rule>
  <declarations>$stores=[store: 3, Store: 1](12); $test=Package test: [[Parcel: [Kayak1 (2) ]]](11); $pack=[Kayak1, Kayak1](2)</declarations>
</org.drools.core.audit.event.ActivationLogEvent>
<org.drools.core.audit.event.ObjectLogEvent>
  <type>1</type>
  <factId>11</factId>
  <objectToString>Package test: [[Parcel: [Kayak1 (2) ]]]</objectToString>
</org.drools.core.audit.event.ObjectLogEvent>
<org.drools.core.audit.event.ActivationLogEvent>
  <type>7</type>
  <activationId>for splitable packages [2]</activationId>
  <rule>for splitable packages</rule>
  <declarations>$p=[Kayak1, Kayak1](2)</declarations>
</org.drools.core.audit.event.ActivationLogEvent>
<org.drools.core.audit.event.ActivationLogEvent>
  <type>6</type>
  <activationId>for splitable packages [1]</activationId>
  <rule>for splitable packages</rule>
  <declarations>$p=[Kobe3, Kobe3](1)</declarations>
</org.drools.core.audit.event.ActivationLogEvent>
<org.drools.core.audit.event.ActivationLogEvent>
  <type>4</type>
  <activationId>generate test results [13, 1, 14]</activationId>
  <rule>generate test results</rule>
  <declarations>$stores=[store: 3, Store: 1](14); $test=Package test: [[Parcel: [Kobe3 (2) ]]](13); $pack=[Kobe3, Kobe3](1)</declarations>
</org.drools.core.audit.event.ActivationLogEvent>
<org.drools.core.audit.event.ObjectLogEvent>
  <type>1</type>
  <factId>13</factId>
  <objectToString>Package test: [[Parcel: [Kobe3 (2) ]]]</objectToString>
</org.drools.core.audit.event.ObjectLogEvent>
<org.drools.core.audit.event.ActivationLogEvent>
  <type>7</type>
  <activationId>for splitable packages [1]</activationId>
  <rule>for splitable packages</rule>
  <declarations>$p=[Kobe3, Kobe3](1)</declarations>
</org.drools.core.audit.event.ActivationLogEvent>
<org.drools.core.audit.event.ActivationLogEvent>
  <type>6</type>
  <activationId>generate test results [13, 1, 14]</activationId>
  <rule>generate test results</rule>
  <declarations>$stores=[store: 3, Store: 1](14); $test=Package test: [[Parcel: [Kobe3 (2) ]]](13); $pack=[Kobe3, Kobe3](1)</declarations>
</org.drools.core.audit.event.ActivationLogEvent>
<org.drools.core.audit.event.ObjectLogEvent>
  <type>1</type>
  <factId>15</factId>
  <objectToString>Package result: [Parcel: [Kobe3 (2) ], source: Store: 1, shippingCosts: 0.61, cost: 0.61], Total cost: 0.61</objectToString>
</org.drools.core.audit.event.ObjectLogEvent>
<org.drools.core.audit.event.ActivationLogEvent>
  <type>5</type>
  <activationId>add splits [1]</activationId>
  <rule>add splits</rule>
  <declarations>$p=[Kobe3, Kobe3](1)</declarations>
</org.drools.core.audit.event.ActivationLogEvent>
<org.drools.core.audit.event.ActivationLogEvent>
  <type>4</type>
  <activationId>get to evaluate [1]</activationId>
  <rule>get to evaluate</rule>
  <declarations>$p=[Kobe3, Kobe3](1)</declarations>
</org.drools.core.audit.event.ActivationLogEvent>
<org.drools.core.audit.event.ActivationLogEvent>
  <type>4</type>
  <activationId>evaluate package results [1, 16]</activationId>
  <rule>evaluate package results</rule>
  <declarations>$results=[Package result: [Parcel: [Kobe3 (2) ], source: Store: 1, shippingCosts: 0.61, cost: 0.61], Total cost: 0.61](16); $p=[Kobe3, Kobe3](1)</declarations>
</org.drools.core.audit.event.ActivationLogEvent>
<org.drools.core.audit.event.ObjectLogEvent>
  <type>2</type>
  <factId>1</factId>
  <objectToString>[Kobe3, Kobe3]</objectToString>
</org.drools.core.audit.event.ObjectLogEvent>
<org.drools.core.audit.event.ObjectLogEvent>
  <type>2</type>
  <factId>13</factId>
  <objectToString>Package test: [[Parcel: [Kobe3 (2) ]]]</objectToString>
</org.drools.core.audit.event.ObjectLogEvent>
<org.drools.core.audit.event.ActivationLogEvent>
  <type>7</type>
  <activationId>generate test results [13, 1, 14]</activationId>
  <rule>generate test results</rule>
  <declarations>$stores=[store: 3, Store: 1](14); $test=Package test: [[Parcel: [Kobe3 (2) ]]](13); $pack=[Kobe3, Kobe3](1)</declarations>
</org.drools.core.audit.event.ActivationLogEvent>
<org.drools.core.audit.event.ActivationLogEvent>
  <type>6</type>
  <activationId>generate test results [11, 2, 12]</activationId>
  <rule>generate test results</rule>
  <declarations>$stores=[store: 3, Store: 1](12); $test=Package test: [[Parcel: [Kayak1 (2) ]]](11); $pack=[Kayak1, Kayak1](2)</declarations>
</org.drools.core.audit.event.ActivationLogEvent>
<org.drools.core.audit.event.ObjectLogEvent>
  <type>1</type>
  <factId>17</factId>
  <objectToString>Package result: [Parcel: [Kayak1 (2) ], source: Store: 1, shippingCosts: 67.8, cost: 67.8], Total cost: 67.8</objectToString>
</org.drools.core.audit.event.ObjectLogEvent>
<org.drools.core.audit.event.ActivationLogEvent>
  <type>5</type>
  <activationId>add splits [2]</activationId>
  <rule>add splits</rule>
  <declarations>$p=[Kayak1, Kayak1](2)</declarations>
</org.drools.core.audit.event.ActivationLogEvent>
<org.drools.core.audit.event.ActivationLogEvent>
  <type>4</type>
  <activationId>get to evaluate [2]</activationId>
  <rule>get to evaluate</rule>
  <declarations>$p=[Kayak1, Kayak1](2)</declarations>
</org.drools.core.audit.event.ActivationLogEvent>
<org.drools.core.audit.event.ActivationLogEvent>
  <type>4</type>
  <activationId>evaluate package results [2, 18]</activationId>
  <rule>evaluate package results</rule>
  <declarations>$results=[Package result: [Parcel: [Kayak1 (2) ], source: Store: 1, shippingCosts: 67.8, cost: 67.8], Total cost: 67.8](18); $p=[Kayak1, Kayak1](2)</declarations>
</org.drools.core.audit.event.ActivationLogEvent>
<org.drools.core.audit.event.ObjectLogEvent>
  <type>2</type>
  <factId>2</factId>
  <objectToString>[Kayak1, Kayak1]</objectToString>
</org.drools.core.audit.event.ObjectLogEvent>
<org.drools.core.audit.event.ObjectLogEvent>
  <type>2</type>
  <factId>11</factId>
  <objectToString>Package test: [[Parcel: [Kayak1 (2) ]]]</objectToString>
</org.drools.core.audit.event.ObjectLogEvent>
<org.drools.core.audit.event.ActivationLogEvent>
  <type>7</type>
  <activationId>generate test results [11, 2, 12]</activationId>
  <rule>generate test results</rule>
  <declarations>$stores=[store: 3, Store: 1](12); $test=Package test: [[Parcel: [Kayak1 (2) ]]](11); $pack=[Kayak1, Kayak1](2)</declarations>
</org.drools.core.audit.event.ActivationLogEvent>
<org.drools.core.audit.event.ActivationLogEvent>
  <type>6</type>
  <activationId>generate test results [9, 3, 10]</activationId>
  <rule>generate test results</rule>
  <declarations>$stores=[store: 3, Store: 1](10); $test=Package test: [[Parcel: [AJ13 (1) ]]](9); $pack=[AJ13](3)</declarations>
</org.drools.core.audit.event.ActivationLogEvent>
<org.drools.core.audit.event.ObjectLogEvent>
  <type>1</type>
  <factId>19</factId>
  <objectToString>Package result: [Parcel: [AJ13 (1) ], source: store: 3, shippingCosts: 0.88, cost: 0.88], Total cost: 0.88</objectToString>
</org.drools.core.audit.event.ObjectLogEvent>
<org.drools.core.audit.event.ActivationLogEvent>
  <type>5</type>
  <activationId>add splits [3]</activationId>
  <rule>add splits</rule>
  <declarations>$p=[AJ13](3)</declarations>
</org.drools.core.audit.event.ActivationLogEvent>
<org.drools.core.audit.event.ActivationLogEvent>
  <type>4</type>
  <activationId>get to evaluate [3]</activationId>
  <rule>get to evaluate</rule>
  <declarations>$p=[AJ13](3)</declarations>
</org.drools.core.audit.event.ActivationLogEvent>
<org.drools.core.audit.event.ActivationLogEvent>
  <type>4</type>
  <activationId>evaluate package results [3, 20]</activationId>
  <rule>evaluate package results</rule>
  <declarations>$results=[Package result: [Parcel: [AJ13 (1) ], source: store: 3, shippingCosts: 0.88, cost: 0.88], Total cost: 0.88](20); $p=[AJ13](3)</declarations>
</org.drools.core.audit.event.ActivationLogEvent>
<org.drools.core.audit.event.ObjectLogEvent>
  <type>2</type>
  <factId>3</factId>
  <objectToString>[AJ13]</objectToString>
</org.drools.core.audit.event.ObjectLogEvent>
<org.drools.core.audit.event.ObjectLogEvent>
  <type>2</type>
  <factId>9</factId>
  <objectToString>Package test: [[Parcel: [AJ13 (1) ]]]</objectToString>
</org.drools.core.audit.event.ObjectLogEvent>
<org.drools.core.audit.event.ActivationLogEvent>
  <type>7</type>
  <activationId>generate test results [9, 3, 10]</activationId>
  <rule>generate test results</rule>
  <declarations>$stores=[store: 3, Store: 1](10); $test=Package test: [[Parcel: [AJ13 (1) ]]](9); $pack=[AJ13](3)</declarations>
</org.drools.core.audit.event.ActivationLogEvent>
<org.drools.core.audit.event.ActivationLogEvent>
  <type>6</type>
  <activationId>generate test results [7, 4, 8]</activationId>
  <rule>generate test results</rule>
  <declarations>$stores=[store: 3, Store: 1](8); $test=Package test: [[Parcel: [AJ13 (1) ]]](7); $pack=[AJ13](4)</declarations>
</org.drools.core.audit.event.ActivationLogEvent>
<org.drools.core.audit.event.ObjectLogEvent>
  <type>1</type>
  <factId>21</factId>
  <objectToString>Package result: [Parcel: [AJ13 (1) ], source: store: 3, shippingCosts: 0.88, cost: 0.88], Total cost: 0.88</objectToString>
</org.drools.core.audit.event.ObjectLogEvent>
<org.drools.core.audit.event.ActivationLogEvent>
  <type>4</type>
  <activationId>Explode Package [4]</activationId>
  <rule>Explode Package</rule>
  <declarations>$p=[AJ13](4)</declarations>
</org.drools.core.audit.event.ActivationLogEvent>
<org.drools.core.audit.event.ActivationLogEvent>
  <type>5</type>
  <activationId>add splits [4]</activationId>
  <rule>add splits</rule>
  <declarations>$p=[AJ13](4)</declarations>
</org.drools.core.audit.event.ActivationLogEvent>
<org.drools.core.audit.event.ActivationLogEvent>
  <type>4</type>
  <activationId>get to evaluate [4]</activationId>
  <rule>get to evaluate</rule>
  <declarations>$p=[AJ13](4)</declarations>
</org.drools.core.audit.event.ActivationLogEvent>
<org.drools.core.audit.event.ActivationLogEvent>
  <type>4</type>
  <activationId>evaluate package results [4, 22]</activationId>
  <rule>evaluate package results</rule>
  <declarations>$results=[Package result: [Parcel: [AJ13 (1) ], source: store: 3, shippingCosts: 0.88, cost: 0.88], Total cost: 0.88](22); $p=[AJ13](4)</declarations>
</org.drools.core.audit.event.ActivationLogEvent>
<org.drools.core.audit.event.ObjectLogEvent>
  <type>2</type>
  <factId>4</factId>
  <objectToString>[AJ13]</objectToString>
</org.drools.core.audit.event.ObjectLogEvent>
<org.drools.core.audit.event.ObjectLogEvent>
  <type>2</type>
  <factId>7</factId>
  <objectToString>Package test: [[Parcel: [AJ13 (1) ]]]</objectToString>
</org.drools.core.audit.event.ObjectLogEvent>
<org.drools.core.audit.event.ActivationLogEvent>
  <type>7</type>
  <activationId>generate test results [7, 4, 8]</activationId>
  <rule>generate test results</rule>
  <declarations>$stores=[store: 3, Store: 1](8); $test=Package test: [[Parcel: [AJ13 (1) ]]](7); $pack=[AJ13](4)</declarations>
</org.drools.core.audit.event.ActivationLogEvent>
<org.drools.core.audit.event.ActivationLogEvent>
  <type>6</type>
  <activationId>Explode Package [4]</activationId>
  <rule>Explode Package</rule>
  <declarations>$p=[AJ13](4)</declarations>
</org.drools.core.audit.event.ActivationLogEvent>
<org.drools.core.audit.event.ActivationLogEvent>
  <type>7</type>
  <activationId>Explode Package [4]</activationId>
  <rule>Explode Package</rule>
  <declarations>$p=[AJ13](4)</declarations>
</org.drools.core.audit.event.ActivationLogEvent>
<org.drools.core.audit.event.ActivationLogEvent>
  <type>6</type>
  <activationId>get to evaluate [4]</activationId>
  <rule>get to evaluate</rule>
  <declarations>$p=[AJ13](4)</declarations>
</org.drools.core.audit.event.ActivationLogEvent>
<org.drools.core.audit.event.ActivationLogEvent>
  <type>7</type>
  <activationId>get to evaluate [4]</activationId>
  <rule>get to evaluate</rule>
  <declarations>$p=[AJ13](4)</declarations>
</org.drools.core.audit.event.ActivationLogEvent>
<org.drools.core.audit.event.ActivationLogEvent>
  <type>6</type>
  <activationId>evaluate package results [4, 22]</activationId>
  <rule>evaluate package results</rule>
  <declarations>$results=[Package result: [Parcel: [AJ13 (1) ], source: store: 3, shippingCosts: 0.88, cost: 0.88], Total cost: 0.88](22); $p=[AJ13](4)</declarations>
</org.drools.core.audit.event.ActivationLogEvent>
<org.drools.core.audit.event.ActivationLogEvent>
  <type>7</type>
  <activationId>evaluate package results [4, 22]</activationId>
  <rule>evaluate package results</rule>
  <declarations>$results=[Package result: [Parcel: [AJ13 (1) ], source: store: 3, shippingCosts: 0.88, cost: 0.88], Total cost: 0.88](22); $p=[AJ13](4)</declarations>
</org.drools.core.audit.event.ActivationLogEvent>
<org.drools.core.audit.event.ActivationLogEvent>
  <type>6</type>
  <activationId>evaluate package results [3, 20]</activationId>
  <rule>evaluate package results</rule>
  <declarations>$results=[Package result: [Parcel: [AJ13 (1) ], source: store: 3, shippingCosts: 0.88, cost: 0.88], Total cost: 0.88](20); $p=[AJ13](3)</declarations>
</org.drools.core.audit.event.ActivationLogEvent>
<org.drools.core.audit.event.ActivationLogEvent>
  <type>7</type>
  <activationId>evaluate package results [3, 20]</activationId>
  <rule>evaluate package results</rule>
  <declarations>$results=[Package result: [Parcel: [AJ13 (1) ], source: store: 3, shippingCosts: 0.88, cost: 0.88], Total cost: 0.88](20); $p=[AJ13](3)</declarations>
</org.drools.core.audit.event.ActivationLogEvent>
<org.drools.core.audit.event.ActivationLogEvent>
  <type>6</type>
  <activationId>evaluate package results [2, 18]</activationId>
  <rule>evaluate package results</rule>
  <declarations>$results=[Package result: [Parcel: [Kayak1 (2) ], source: Store: 1, shippingCosts: 67.8, cost: 67.8], Total cost: 67.8](18); $p=[Kayak1, Kayak1](2)</declarations>
</org.drools.core.audit.event.ActivationLogEvent>
<org.drools.core.audit.event.ActivationLogEvent>
  <type>7</type>
  <activationId>evaluate package results [2, 18]</activationId>
  <rule>evaluate package results</rule>
  <declarations>$results=[Package result: [Parcel: [Kayak1 (2) ], source: Store: 1, shippingCosts: 67.8, cost: 67.8], Total cost: 67.8](18); $p=[Kayak1, Kayak1](2)</declarations>
</org.drools.core.audit.event.ActivationLogEvent>
<org.drools.core.audit.event.ActivationLogEvent>
  <type>6</type>
  <activationId>evaluate package results [1, 16]</activationId>
  <rule>evaluate package results</rule>
  <declarations>$results=[Package result: [Parcel: [Kobe3 (2) ], source: Store: 1, shippingCosts: 0.61, cost: 0.61], Total cost: 0.61](16); $p=[Kobe3, Kobe3](1)</declarations>
</org.drools.core.audit.event.ActivationLogEvent>
<org.drools.core.audit.event.ActivationLogEvent>
  <type>7</type>
  <activationId>evaluate package results [1, 16]</activationId>
  <rule>evaluate package results</rule>
  <declarations>$results=[Package result: [Parcel: [Kobe3 (2) ], source: Store: 1, shippingCosts: 0.61, cost: 0.61], Total cost: 0.61](16); $p=[Kobe3, Kobe3](1)</declarations>
</org.drools.core.audit.event.ActivationLogEvent>
<org.drools.core.audit.event.ActivationLogEvent>
  <type>6</type>
  <activationId>get to evaluate [3]</activationId>
  <rule>get to evaluate</rule>
  <declarations>$p=[AJ13](3)</declarations>
</org.drools.core.audit.event.ActivationLogEvent>
<org.drools.core.audit.event.ActivationLogEvent>
  <type>7</type>
  <activationId>get to evaluate [3]</activationId>
  <rule>get to evaluate</rule>
  <declarations>$p=[AJ13](3)</declarations>
</org.drools.core.audit.event.ActivationLogEvent>
<org.drools.core.audit.event.ActivationLogEvent>
  <type>6</type>
  <activationId>get to evaluate [2]</activationId>
  <rule>get to evaluate</rule>
  <declarations>$p=[Kayak1, Kayak1](2)</declarations>
</org.drools.core.audit.event.ActivationLogEvent>
<org.drools.core.audit.event.ActivationLogEvent>
  <type>7</type>
  <activationId>get to evaluate [2]</activationId>
  <rule>get to evaluate</rule>
  <declarations>$p=[Kayak1, Kayak1](2)</declarations>
</org.drools.core.audit.event.ActivationLogEvent>
<org.drools.core.audit.event.ActivationLogEvent>
  <type>6</type>
  <activationId>get to evaluate [1]</activationId>
  <rule>get to evaluate</rule>
  <declarations>$p=[Kobe3, Kobe3](1)</declarations>
</org.drools.core.audit.event.ActivationLogEvent>
<org.drools.core.audit.event.ActivationLogEvent>
  <type>7</type>
  <activationId>get to evaluate [1]</activationId>
  <rule>get to evaluate</rule>
  <declarations>$p=[Kobe3, Kobe3](1)</declarations>
</org.drools.core.audit.event.ActivationLogEvent>
<org.drools.core.audit.event.ActivationLogEvent>
  <type>6</type>
  <activationId>Explode Package [3]</activationId>
  <rule>Explode Package</rule>
  <declarations>$p=[AJ13](3)</declarations>
</org.drools.core.audit.event.ActivationLogEvent>
<org.drools.core.audit.event.ActivationLogEvent>
  <type>7</type>
  <activationId>Explode Package [3]</activationId>
  <rule>Explode Package</rule>
  <declarations>$p=[AJ13](3)</declarations>
</org.drools.core.audit.event.ActivationLogEvent>
<org.drools.core.audit.event.ActivationLogEvent>
  <type>6</type>
  <activationId>Explode Package [2]</activationId>
  <rule>Explode Package</rule>
  <declarations>$p=[Kayak1, Kayak1](2)</declarations>
</org.drools.core.audit.event.ActivationLogEvent>
<org.drools.core.audit.event.ActivationLogEvent>
  <type>7</type>
  <activationId>Explode Package [2]</activationId>
  <rule>Explode Package</rule>
  <declarations>$p=[Kayak1, Kayak1](2)</declarations>
</org.drools.core.audit.event.ActivationLogEvent>
<org.drools.core.audit.event.ActivationLogEvent>
  <type>6</type>
  <activationId>Explode Package [1]</activationId>
  <rule>Explode Package</rule>
  <declarations>$p=[Kobe3, Kobe3](1)</declarations>
</org.drools.core.audit.event.ActivationLogEvent>
<org.drools.core.audit.event.ActivationLogEvent>
  <type>7</type>
  <activationId>Explode Package [1]</activationId>
  <rule>Explode Package</rule>
  <declarations>$p=[Kobe3, Kobe3](1)</declarations>
</org.drools.core.audit.event.ActivationLogEvent>
</object-stream>
